[
  {
    "objectID": "aboutme.html",
    "href": "aboutme.html",
    "title": "About me",
    "section": "",
    "text": "My name is Hayley Hemme and I’m a second-year master of public health student concentrating in epidemiology. I received my bachelor of science in Biology from Brenau University in 2017 where I concentrated in biomedical sciences. I have previous training as an HIV tester and counselor, and worked in the emergency department as a medical scribe and clinical technician before returning to school to pursue my masters.\nMy primary interest is in infectious disease epidemiology, specifically HIV. An area of research I am interested in is the use of molecular HIV surveillance to detect clusters, and how these methods might be used with conjunction with spatial methods to predict future clusters and help better inform resource allocation.\nI have taken multiple courses that utilize statistics, programming, and/or data analysis, including all the required core classes for my program, as well as Spatial Epidemiology and Introduction to Coding in R. I experience working with STATA, SAS, and R, and while I am most comfortable working in R, I know there is still a lot for me to learn! What I hope to get most out of this course is functional knowledge of variety of data analysis methods and to improve on communicating results to stakeholders from a variety of backgrounds.\n\nAn interesting fact about me\n\nI am an intermediate-level aerialist training on trapeze and aerial sling.\nI am exotic pet hobbyist with a fear of “bugs” and arachnids, despite having several in my collection.\nI enjoy doing tricks training with my dog, Punch.\n\n\n\n\nMe and my dog Punch at Boo-le-bark.\n\n\n\n\nMyth: The Data Speaks for Itself\nThe link above is to a post on blog that was recently shared with me. I appreciate the author’s insight to data reporting, however blunt they may be. This particular post speaks to the perceived objectivity of data. I think that it’s important to understand that data may be interpreted in different ways, even among those with data literacy. She advocates that data story-telling be presented alongside results of data in order to better explain real-world implications."
  },
  {
    "objectID": "coding_exercise.html",
    "href": "coding_exercise.html",
    "title": "R Coding Exercise",
    "section": "",
    "text": "Loading packages\nLoading data\nSubsetting data from African countries\nCreating new objects from ‘africadata’– ‘imle’ containing infant mortality and life expectancy, and ‘ple’ containing population size and life expectancy\nData Visualization\nNext, let’s find out which years are missing data on infant mortality\nSubsetting data from the year 2000\nPlotting data from African Countries in 2000\nFitting a simple model\nConclusions\nThere is statistically significant evidence supporting an association between life expectancy and infant mortality. Life expectancy decreases by 2.49 years for every unit increase in infant mortality (p < 0.05). The data does not show statistically significant evidence of association between life expectancy and population size (p = 0.62)."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Hayley Hemme’s Website and Data Analysis Portfolio",
    "section": "",
    "text": "Hello!\n\nWelcome to my website and data analysis portfolio.\nPlease check back throughout the Spring 2023 semester to stay up to date with my progress in the MADA course.\n\nPlease use the Menu Bar above to look around.\nThank you!"
  },
  {
    "objectID": "tidytuesday_exercise.html",
    "href": "tidytuesday_exercise.html",
    "title": "Tidy Tuesday Exercise",
    "section": "",
    "text": "library(here)\nlibrary(epiDisplay)\nlibrary(tidyverse)\nlibrary(plotly)\n\nThis data was obtained from the github Importing the data\n\nage_gaps <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-02-14/age_gaps.csv')\n\nwrite_csv(age_gaps, here(\"data/age_gaps.csv\"))\n\nLet’s start by taking a glimpse at the dataset.\n\nglimpse(age_gaps)\n\nRows: 1,155\nColumns: 13\n$ movie_name         <chr> \"Harold and Maude\", \"Venus\", \"The Quiet American\", …\n$ release_year       <dbl> 1971, 2006, 2002, 1998, 2010, 1992, 2009, 1999, 199…\n$ director           <chr> \"Hal Ashby\", \"Roger Michell\", \"Phillip Noyce\", \"Joe…\n$ age_difference     <dbl> 52, 50, 49, 45, 43, 42, 40, 39, 38, 38, 36, 36, 35,…\n$ couple_number      <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ actor_1_name       <chr> \"Ruth Gordon\", \"Peter O'Toole\", \"Michael Caine\", \"D…\n$ actor_2_name       <chr> \"Bud Cort\", \"Jodie Whittaker\", \"Do Thi Hai Yen\", \"T…\n$ character_1_gender <chr> \"woman\", \"man\", \"man\", \"man\", \"man\", \"man\", \"man\", …\n$ character_2_gender <chr> \"man\", \"woman\", \"woman\", \"woman\", \"man\", \"woman\", \"…\n$ actor_1_birthdate  <date> 1896-10-30, 1932-08-02, 1933-03-14, 1930-09-17, 19…\n$ actor_2_birthdate  <date> 1948-03-29, 1982-06-03, 1982-10-01, 1975-11-08, 19…\n$ actor_1_age        <dbl> 75, 74, 69, 68, 81, 59, 62, 69, 57, 77, 59, 56, 65,…\n$ actor_2_age        <dbl> 23, 24, 20, 23, 38, 17, 22, 30, 19, 39, 23, 20, 30,…\n\n\nLet’s take a look at some summary statistics on age_difference.\n\nage_gaps %>% pull(age_difference) %>% summary()\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   0.00    4.00    8.00   10.42   15.00   52.00 \n\n\nLet’s see how many unique movies are included in the dataset.\n\nage_gaps %>% pull(movie_name) %>% n_distinct()\n\n[1] 830\n\n\nThere are 830 unique movies.\nLet’s also look at how many different directors appear in the dataset.\n\nage_gaps %>% pull(director) %>% n_distinct()\n\n[1] 510\n\n\nThere are 510 unique directors.\nLet’s make a new variable for th the number of movies released each decade in the dataset. We’ll do this by performing integer division using %/% and multiplying by 10.\n\nage_gaps <- age_gaps %>% \n  mutate(decade_released = 10 * (release_year %/% 10))\n\n\nage_gaps %>% \n  count(decade_released) %>% \n  ggplot() + geom_line(aes(decade_released, n)) +\n  scale_x_continuous(breaks = seq(1930,2020, 10))\n\n\n\n\nWe can see that the decade with the most movie releases was 2000.\nLet’s create variable for the largest age difference by decade released.\n\nage_gaps <- age_gaps %>%\n  group_by(decade_released) %>% \n  mutate(max_age_diff = max(age_difference))\n\nage_gaps %>% \n   ggplot() + \n  geom_line(data = age_gaps, aes(x = decade_released, y= max_age_diff))  + \n  scale_x_continuous(breaks = seq(1930,2020, 10))\n\n\n\n\nLet’s see if we can combine these plots and add some design elements.\n\nplot <- age_gaps %>% \n  count(decade_released) %>% \n  ggplot() + geom_line(aes(decade_released, n), color = \"red\", linewidth = 1) +\n    geom_line(data = age_gaps, aes(x = decade_released, y= max_age_diff),\n              color = \"pink\" , linewidth = 1)  +\n  scale_x_continuous(breaks = seq(1930,2020, 10)) + \n  labs(x = \"Year of Movie Release\", y = \"Number of Movies Released\",\n       title = \"Number of Movies Released with Love Interests and Largest Age Gap,\n       by Decade\") +\n  theme_classic()\n\nplot \n\n\n\n\nLet’s make the plot interactive!\n\nremove_buttons <- list('zoom2d','pan2d','lasso2d', 'select2d','zoomIn2d',\n                              'zoomOut2d','autoScale2d','hoverClosestCartesian',\n                              'toggleSpikelines','hoverCompareCartesian')\n\nggplotly(plot) %>% config(modeBarButtonsToRemove = remove_buttons)  \n\n\n\n\n\nNext, let’s switch gears entirely and find out what the most common name is among directors. We’ll need to load tidytext().\n\nlibrary(tidytext)\n\nage_gaps %>% ungroup() %>%\n  distinct(director) %>% \n  unnest_tokens(word, director) %>% \n  count(word, sort = TRUE) %>% \n  top_n(15)\n\n# A tibble: 15 × 2\n   word        n\n   <chr>   <int>\n 1 john       17\n 2 david      14\n 3 michael    13\n 4 peter      12\n 5 paul       11\n 6 george     10\n 7 james      10\n 8 robert     10\n 9 richard     7\n10 jon         6\n11 kevin       6\n12 lee         6\n13 mark        6\n14 scott       6\n15 steven      6\n\n\nLet’s see what the most common names are among directors with a ‘large’ age difference. Let’s use observations with an age difference >= 15 years, which is >= 75th quantile.\n\nage_gaps %>% pull(age_difference) %>% quantile()\n\n  0%  25%  50%  75% 100% \n   0    4    8   15   52 \n\nage_gaps %>% ungroup() %>%\n  filter(age_difference >= 15) %>% \n  distinct(director) %>% \n  unnest_tokens(word, director) %>% \n  count(word, sort = TRUE) %>%\n  top_n(15)\n\nSelecting by n\n\n\n# A tibble: 16 × 2\n   word        n\n   <chr>   <int>\n 1 john        8\n 2 david       6\n 3 michael     5\n 4 peter       5\n 5 marc        4\n 6 paul        4\n 7 richard     4\n 8 robert      4\n 9 scott       4\n10 george      3\n11 james       3\n12 joseph      3\n13 lee         3\n14 mike        3\n15 steven      3\n16 thomas      3\n\n\nWhile the top 5 directors are identical to the previous list, Marc appears in the 6th most frequent among directors of movies with an age difference greater than or equal to 15 years.\nLet’s find out which movies these Marc’s directed.\n\nage_gaps %>%\n   filter(grepl(\"Marc \", director)) %>%\n   arrange(desc(release_year))\n\n# A tibble: 14 × 15\n# Groups:   decade_released [2]\n   movie_name    relea…¹ direc…² age_d…³ coupl…⁴ actor…⁵ actor…⁶ chara…⁷ chara…⁸\n   <chr>           <dbl> <chr>     <dbl>   <dbl> <chr>   <chr>   <chr>   <chr>  \n 1 The Only Liv…    2017 Marc W…      20       1 Pierce… Kate B… man     woman  \n 2 All I See Is…    2017 Marc F…      18       1 Jason … Blake … man     woman  \n 3 The Only Liv…    2017 Marc W…      17       2 Kate B… Callum… woman   man    \n 4 The Only Liv…    2017 Marc W…       3       3 Callum… Kierse… man     woman  \n 5 World War Z      2013 Marc F…      12       1 Brad P… Mireil… man     woman  \n 6 The Amazing …    2012 Marc W…       5       1 Andrew… Emma S… man     woman  \n 7 The Young Vi…    2009 Jean-M…       2       1 Rupert… Emily … man     woman  \n 8 500 Days of …    2009 Marc W…       1       1 Zooey … Joseph… woman   man    \n 9 Quantum of S…    2008 Marc F…      18       1 Daniel… Gemma … man     woman  \n10 Suburban Girl    2007 Marc K…      19       1 Alec B… Sarah … man     woman  \n11 Music and Ly…    2007 Marc L…      15       1 Hugh G… Drew B… man     woman  \n12 Stranger Tha…    2006 Marc F…      10       1 Will F… Maggie… man     woman  \n13 Two Weeks No…    2002 Marc L…       4       1 Hugh G… Sandra… man     woman  \n14 Monster's Ba…    2001 Marc F…      11       1 Billy … Halle … man     woman  \n# … with 6 more variables: actor_1_birthdate <date>, actor_2_birthdate <date>,\n#   actor_1_age <dbl>, actor_2_age <dbl>, decade_released <dbl>,\n#   max_age_diff <dbl>, and abbreviated variable names ¹​release_year,\n#   ²​director, ³​age_difference, ⁴​couple_number, ⁵​actor_1_name, ⁶​actor_2_name,\n#   ⁷​character_1_gender, ⁸​character_2_gender\n\n\nSo, it looks like our filter picked up a sneaky Marc… Jean-Marc. Let’s remove this observation by specifying that the director’s name must begin with Marc.\n\nmarc <- age_gaps %>%\n  filter(grepl(\"^Marc \", director))\n\nmarc %>%\n  pull(movie_name) %>%\n  unique()\n\n [1] \"The Only Living Boy in New York\" \"Suburban Girl\"                  \n [3] \"All I See Is You\"                \"Quantum of Solace\"              \n [5] \"Music and Lyrics\"                \"World War Z\"                    \n [7] \"Monster's Ball\"                  \"Stranger Than Fiction\"          \n [9] \"The Amazing Spider-Man\"          \"Two Weeks Notice\"               \n[11] \"500 Days of Summer\"             \n\n\nLet’s find the average age difference for these Marc-directed love movies\n\nmarc %>%\n  pull(age_difference) %>%\n  summary()\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   1.00    5.00   12.00   11.77   18.00   20.00 \n\n\n\nmarc %>%\n  pull(director) %>%\n  unique()\n\n[1] \"Marc Webb\"     \"Marc Klein\"    \"Marc Forster\"  \"Marc Lawrence\"\n\n\nLet’s also rename the director variable and drop Marc from the rows using str_replace.\n\nlibrary(stringr)\n\nmarc$director <- str_replace(marc$director, \"Marc \", \"\")\n\nmarc <- marc %>% rename(`Director Marc` = director)\n\n\nmarc %>% ggplot(aes(x= release_year, y= age_difference, color= `Director Marc`)) +\n  geom_line() +\n  geom_point() +\n  scale_x_continuous(breaks = seq(2001, 2019, 3)) +\n  labs(x = \"Year of Movie Release\", y = \"Age Difference in Years\",\n       title = \"Age Gaps in Movies by Marc(s) by Year Released\")\n\n\n\n\nWhile my approach to this exercise was obviously silly, I learned a lot about the tidytext package, which I’d never used before, and a useful trick for a function I use regularly!\n\nwrite_csv(age_gaps, here(\"data/age_gaps_edited.csv\"))"
  },
  {
    "objectID": "visualization_exercise.html",
    "href": "visualization_exercise.html",
    "title": "Visualization Exercise",
    "section": "",
    "text": "library(tidyverse)\nlibrary(here)\nhere()\n\n[1] \"C:/Users/Hayley/Desktop/MADA2023/hayleyhemme-MADA-portfolio\"\n\n\nThe plot we’ll be trying to replicate is from Our World in Data.\n\n\n\n\n\n\nHIV_GBD <- read_csv(here(\"data/deaths-from-hiv-by-age.csv\"))\nglimpse(HIV_GBD)\n\nRows: 6,840\nColumns: 8\n$ Entity                                                      <chr> \"Afghanist…\n$ Code                                                        <chr> \"AFG\", \"AF…\n$ Year                                                        <dbl> 1990, 1991…\n$ `Deaths - HIV/AIDS - Sex: Both - Age: 70+ years (Number)`   <dbl> 1, 1, 2, 2…\n$ `Deaths - HIV/AIDS - Sex: Both - Age: 50-69 years (Number)` <dbl> 7, 8, 9, 1…\n$ `Deaths - HIV/AIDS - Sex: Both - Age: 15-49 years (Number)` <dbl> 15, 19, 24…\n$ `Deaths - HIV/AIDS - Sex: Both - Age: 5-14 years (Number)`  <dbl> 0, 0, 0, 1…\n$ `Deaths - HIV/AIDS - Sex: Both - Age: Under 5 (Number)`     <dbl> 10, 12, 13…\n\n\nLet’s group by year and find the sum of deaths for each year in each age group.\n\nyear_sums_70 <- HIV_GBD %>% group_by(Year) %>% \n  summarize(`70+ years` = sum(`Deaths - HIV/AIDS - Sex: Both - Age: 70+ years (Number)`))  \n\nyear_sums_50 <- HIV_GBD %>% group_by(Year) %>% \n  summarize(`50-69 years` = sum(`Deaths - HIV/AIDS - Sex: Both - Age: 50-69 years (Number)`))  \n\nyear_sums_15 <- HIV_GBD %>% group_by(Year) %>% summarize(`15-49 years`  = sum(`Deaths - HIV/AIDS - Sex: Both - Age: 15-49 years (Number)`))  \n\nyear_sums_5 <- HIV_GBD %>% group_by(Year) %>% \n  summarize(`5-14 years` = sum(`Deaths - HIV/AIDS - Sex: Both - Age: 5-14 years (Number)`)) \n\nyear_sums_0 <- HIV_GBD %>% group_by(Year) %>% \n  summarize(`Under 5 years` = sum(`Deaths - HIV/AIDS - Sex: Both - Age: Under 5 (Number)`)) \n\nLet’s join the datasets and check to see how things are looking.\n\nyear_sums <-list(year_sums_70, year_sums_50, year_sums_15, year_sums_5, year_sums_0)\nyear_sums <- year_sums %>% reduce(full_join)\n\nJoining with `by = join_by(Year)`\nJoining with `by = join_by(Year)`\nJoining with `by = join_by(Year)`\nJoining with `by = join_by(Year)`\n\nglimpse(year_sums)\n\nRows: 30\nColumns: 6\n$ Year            <dbl> 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, …\n$ `70+ years`     <dbl> 20399, 26573, 33797, 41998, 51362, 61170, 71366, 80974…\n$ `50-69 years`   <dbl> 206148, 265170, 334139, 414419, 505039, 596589, 676115…\n$ `15-49 years`   <dbl> 1169847, 1507786, 1901048, 2355302, 2857896, 3371592, …\n$ `5-14 years`    <dbl> 14380, 19461, 26079, 35140, 46940, 60284, 75037, 90767…\n$ `Under 5 years` <dbl> 371472, 459127, 553263, 651461, 747455, 839116, 919408…\n\n\nNice! Let’s make things a bit easier to plot by pivoting the data into long format.\n\nsums_long <- year_sums %>% \n  pivot_longer(2:6, names_to = \"Age\", values_to = \"Deaths\")\n\nWe’ll make age group a factor…\n\nsums_long <- sums_long %>%\n  mutate(Age = as.factor(Age), \n  Age = factor(\n      Age,\n      level = c(\"Under 5 years\", \"5-14 years\",\"15-49 years\", \"50-69 years\", \"70+ years\")))\n\nNow let’s plot it\n\nsums_long %>% ggplot(aes(x= Year, y = Deaths, color=Age, fill = Age))  +\n  geom_area() + labs(title = \"Deaths from HIV/AIDS , by age, World, 1990 to 2019\") + \n  theme_bw()\n\n\n\n\nWait! Something is not looking right with the data… our counts are significantly higher than those shown in the original plot. Let’s see if we find out why… Let’s load ‘naniar’ to see if there is anything unexpected about the data.\n\nlibrary(naniar)\nvis_miss(HIV_GBD)\n\n\n\n\nIt looks like the column ‘Entity’ contains data for both countries and continents! Let’s try to correct this by dropping observations missing a country code.\n\nHIV_GBD <- HIV_GBD %>% drop_na(Code)\n\n\nHIV_GBD %>% group_by(Year) %>%\n  slice_max(`Deaths - HIV/AIDS - Sex: Both - Age: 70+ years (Number)`)\n\n# A tibble: 30 × 8\n# Groups:   Year [30]\n   Entity Code      Year Deaths - HIV/AIDS - S…¹ Death…² Death…³ Death…⁴ Death…⁵\n   <chr>  <chr>    <dbl>                   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n 1 World  OWID_WRL  1990                    3954   38533  217774    2712   73413\n 2 World  OWID_WRL  1991                    5152   49785  281693    3706   90819\n 3 World  OWID_WRL  1992                    6567   63068  356532    5013  109445\n 4 World  OWID_WRL  1993                    8175   78513  442911    6782  128770\n 5 World  OWID_WRL  1994                    9998   95881  538488    9084  147553\n 6 World  OWID_WRL  1995                   11907  113569  636910   11721  165293\n 7 World  OWID_WRL  1996                   13880  129592  723923   14650  180613\n 8 World  OWID_WRL  1997                   15741  144713  803647   17796  193410\n 9 World  OWID_WRL  1998                   17651  161922  898187   21356  205780\n10 World  OWID_WRL  1999                   19473  179766 1001519   25126  215227\n# … with 20 more rows, and abbreviated variable names\n#   ¹​`Deaths - HIV/AIDS - Sex: Both - Age: 70+ years (Number)`,\n#   ²​`Deaths - HIV/AIDS - Sex: Both - Age: 50-69 years (Number)`,\n#   ³​`Deaths - HIV/AIDS - Sex: Both - Age: 15-49 years (Number)`,\n#   ⁴​`Deaths - HIV/AIDS - Sex: Both - Age: 5-14 years (Number)`,\n#   ⁵​`Deaths - HIV/AIDS - Sex: Both - Age: Under 5 (Number)`\n\n\nThat explains it! Things were getting counted twice. Let’s making new dataframe where containing only observations for the ‘World’.\n\nworld <- HIV_GBD %>% \n  filter(grepl(\"OWID_WRL\", Code))\n\nRe-running the previous code…\n\nworld70 <- world %>% group_by(Year) %>% \n  summarize(`70+ years` = sum(`Deaths - HIV/AIDS - Sex: Both - Age: 70+ years (Number)`))  \n\nworld50 <- world %>% group_by(Year) %>% \n  summarize(`50-69 years` = sum(`Deaths - HIV/AIDS - Sex: Both - Age: 50-69 years (Number)`))  \n\nworld15 <- world %>% group_by(Year) %>% \n  summarize(`15-49 years`  = sum(`Deaths - HIV/AIDS - Sex: Both - Age: 15-49 years (Number)`))  \n\nworld5 <- world %>% group_by(Year) %>% \n  summarize(`5-14 years` = sum(`Deaths - HIV/AIDS - Sex: Both - Age: 5-14 years (Number)`)) \n\nworld0 <- world %>% group_by(Year) %>% \n  summarize(`Under 5 years` = sum(`Deaths - HIV/AIDS - Sex: Both - Age: Under 5 (Number)`)) \n\nworld <- list(world70, world50, world15, world5, world0)\nworld <- world %>% reduce(full_join)\n\nJoining with `by = join_by(Year)`\nJoining with `by = join_by(Year)`\nJoining with `by = join_by(Year)`\nJoining with `by = join_by(Year)`\n\nworld_long <- world %>% \n  pivot_longer(2:6, names_to = \"Age\", values_to = \"Deaths\") %>% \n  mutate(Age = as.factor(Age), \n  Age = factor(\n      Age,\n      level = c(\"Under 5 years\", \"5-14 years\",\"15-49 years\", \"50-69 years\", \"70+ years\")))\n\n\nworld_long %>% ggplot(aes(x= Year, y = Deaths, color=Age, fill = Age)) + \n  geom_area() + labs(title = \"Deaths from HIV/AIDS , by age, World, 1990 to 2019\")\n\n\n\n\nLet’s try to better match the original plot. We’ll first reverse the order of the age groups\n\nworld_long <- world_long %>% \n  mutate(Age = fct_rev(Age))\n\nThen we’ll load some useful packages. We’ll load ‘scales’ so that we can add ‘Million’ to the plot and RColorBrewer.\n\nlibrary(scales)\nlibrary(RColorBrewer)\nlibrary(extrafont)\n\n\nplot <- world_long %>% ggplot(aes(x= Year, y = Deaths, color = Age, fill = Age)) +\n  geom_area(alpha = 0.7) + \n  labs(title = \"Deaths from HIV/AIDS , by age, World, 1990 to 2019\") + \n  theme_bw() + scale_fill_brewer(palette = \"Oranges\",\ndirection = -1) + scale_color_brewer(palette = \"Oranges\", direction = -1) +\n  theme(plot.title = element_text(family = \"serif\")) +\n  theme(axis.title.x=element_blank(), axis.title.y=\n          element_blank(), axis.ticks.y = element_blank()) +\n  scale_x_continuous(breaks=c(1990, 1995, 2000, 2005, 2010, 2015, 2019)) + \n  scale_y_continuous(breaks=c(2e5, 4e5, 6e5, 8e5, 1e6, 1.2e6, 1.4e6, 1.6e6, 1.8e6), \n labels = c(\"200,000\",\"400,000\",\"600,000\",\"800,000\" , \"1 Million\", \"1.2 Million\", \n            \"1.4 Million\", \"1.6 Million\", \"1.8 Million\")) +\n  theme(panel.grid.major = element_blank(), panel.grid.minor = element_line(\n    linetype = \"dashed\"),\npanel.border = element_blank(), axis.line.x = element_line(color = \"gray\"))\n\nplot\n\n\n\n\nNot exactly perfect, but we’re getting pretty close!\nAbout the code– alpha is used to the change transparency; I reversed the order of colors in the scale_x_brewer by using direction = -1; I manually specified my breaks for both axes, and add a label to the y axis. I removed major grid-lines and the border around the plot using theme and element blank, and changed the line type of the minor grid-lines, made the x axis line gray.\nSome websites I referred to were:\nggplot2 Reference and Examples (Part 2) - Colours\nStatistics Globe\nLet’s try to directly label the age groups to the plot to better match the original. First, we’ll need to subset the data to just the last observation for x.\n\nw_19 <- world_long %>% filter(Year == 2019)\n\nLet’s also make a new vector containing the age groups.\n\nag <- factor(c(\"Under 5 years\", \"5-14 years\",\"15-49 years\", \"50-69 years\", \"70+ years\"))\nag<- factor(ag, level = c(\"Under 5 years\", \"5-14 years\",\"15-49 years\", \"50-69 years\", \"70+ years\"), fct_rev(ag))\n\nLet’s see how this works…\n\nplot + geom_text(data = w_19, aes(x = 2021.5, y = c(8.7e5, 7.5e5, 4e5, 8.5e4, 100), label = Age),\n    alpha= 2) + theme(legend.position = \"none\") +\n      scale_y_continuous(breaks=c(2e5, 4e5, 6e5, 8e5, 1e6, 1.2e6, 1.4e6, 1.6e6, 1.8e6), \n labels = c(\"200,000\",\"400,000\",\"600,000\",\"800,000\" , \"1 Million\", \"1.2 Million\", \n            \"1.4 Million\", \"1.6 Million\", \"1.8 Million\"),\n sec.axis = sec_axis(~ ., breaks = c(8.7e5, 7.5e5, 4e5, 8.5e4, 100, labels = ag)))\n\nScale for y is already present.\nAdding another scale for y, which will replace the existing scale.\n\n\n\n\n\nNot how I hoped, but I think that I’m on the right track… Some things that I definitely want to work on are making the ‘Under 5 Years’ label more visible and adding direct labels onto the plot.\nSomething to note about this is that when I called scale_y_continuous, it overwrote the previous y scale with labels that I had specified. To get around this, I added that part again and it worked well. Notice the warning message."
  },
  {
    "objectID": "dataanalysis_exercise.html",
    "href": "dataanalysis_exercise.html",
    "title": "Data Analysis Exercise",
    "section": "",
    "text": "This dataset describes drug poisoning deaths in the United States from 1999 - 2015 by demographic factors, including age group, sex, and a simple race/ethnicity variable (NH White, NH Black, Hispanic). This dataset includes all drug poisoning deaths– intentional(suicide and homicide), unintentional, and those with undetermined intent. While this dataset includes some data at the state-level, further investigation into trends of drug poisoning deaths at the state level is limited due to the fact that the data have been aggregated.\nLet’s load the packages we’ll be using in this analysis.\nLoading the dataset…\nLet’s take a look at the data.\nLet’s remove observations at the state-level by filtering for only observations where ‘state’ is the “United States” and remove columns that we won’t be using in the analysis.\nNext, let’s reclass some of our variables. We will also reorder the dataset so that Year is sorted chronologically, then by age group and sex.\nNext, let’s remove observations where rates have been aggregated and remove the columns with NA’s,\nTo make some of these variable easier to work with, let’s rename them.\nLet’s see if we can extract some data from other minorities….\nBefore starting data visualization, let’s reorder the race/ethnicity variable by decreasing crude death rate so that our legend for our plots is easier to interpret.\nLet’s clear the environment and start fresh by loading up the RDS file we just saved!\nSummary Table\nData Visualization and next steps…\nMy idea with this dataset is to explore trends in drug poisoning deaths across a number of demographic factors. Variables of interest are age group (especially ages 25-44), sex, and race/ethnicity."
  },
  {
    "objectID": "coding_exercise.html#continued-data-visualization-and-analysis",
    "href": "coding_exercise.html#continued-data-visualization-and-analysis",
    "title": "R Coding Exercise",
    "section": "Continued Data Visualization and Analysis",
    "text": "Continued Data Visualization and Analysis\n\nCountry Contributions to Continental GDP\n\n# How Much Does Each Country Contribute to Continent's Overall GDP?\n## Setting Up Initial Data\nregion_and_gdp <- africadata %>% filter(year == 1983) %>% group_by(region, gdp) %>% \n  select(country, region, gdp)\n## Creating a New Variable for Continent's GDP\nregion_and_gdp$total_gdp <- sum(region_and_gdp$gdp, na.rm = TRUE)\n# Percentage Contributed to Each \nregion_and_gdp <- region_and_gdp %>%\n  mutate(percentage = gdp/total_gdp * 100)\n\n# Graphing African Countries' Contributions to Continent's GDP\nggplot(region_and_gdp, aes(x = percentage, y = country, group = region, fill = region)) + geom_col() + labs(x = \"Percentage Contributed to Continent's GDP\", y = \"Nation\", title = \"Each Nation's Contribution to Continent's GDP in 1983\")\n\nWarning: Removed 7 rows containing missing values (`position_stack()`).\n\n\n\n\n\n\n\nLooking at What Factors Affect Population in Asia\n\nlibrary(broom)\n\nWarning: package 'broom' was built under R version 4.2.2\n\n# Creating a Model\npopulation_factors_model <- lm(population ~ fertility + life_expectancy + infant_mortality, data = gapminder %>% filter(continent == \"Asia\"))\n\n# Evaluating Model\npop_factors_model_table <- tidy(summary(population_factors_model))\n\nAccording to this model, fertility (p < 0.001) and life expectancy (p < 0.001) appear to significantly impact population in Asia since the null hypothesis that they do not is rejected. However, the null hypothesis that infant mortality does not affect population, in contrast, isn’t rejected."
  },
  {
    "objectID": "coding_exercise.html#fertility-over-time-in-europe",
    "href": "coding_exercise.html#fertility-over-time-in-europe",
    "title": "R Coding Exercise",
    "section": "Fertility Over Time in Europe",
    "text": "Fertility Over Time in Europe\n\n# Investigating Fertility Across Time\nggplot(gapminder %>% filter(continent == \"Europe\"), aes(x = year, y = fertility, group = region, color = region)) + geom_point() + labs(x = \"Year\", y = \"Fertility Rate\", title = \"Fertility Over Time in Europe\")\n\nWarning: Removed 39 rows containing missing values (`geom_point()`)."
  },
  {
    "objectID": "coding_exercise.html#tracking-australias-gdp-over-time",
    "href": "coding_exercise.html#tracking-australias-gdp-over-time",
    "title": "R Coding Exercise",
    "section": "Tracking Australia’s GDP Over Time",
    "text": "Tracking Australia’s GDP Over Time\n\n# Investigating Australia's GDP Across Time\nggplot(gapminder %>% filter(country == \"Australia\"), aes(x = year, y = gdp, color = year)) + geom_point() + geom_line() + labs(x = \"Year\", y = \"GDP\", title = \"GDP Over Time for Australia\")\n\nWarning: Removed 5 rows containing missing values (`geom_point()`).\n\n\nWarning: Removed 5 rows containing missing values (`geom_line()`)."
  },
  {
    "objectID": "dataanalysis_exercise.html#this-section-added-by-connor-ross",
    "href": "dataanalysis_exercise.html#this-section-added-by-connor-ross",
    "title": "Data Analysis Exercise",
    "section": "This section added by CONNOR ROSS",
    "text": "This section added by CONNOR ROSS\nHi Hayley! Thanks for the Intro. This is a really meaningful and cool topic.\n\n# You know I got to have some tidyverseeeee...\nlibrary(tidyverse)\n\n\n# Let's take a look at what we got...\nstr(df)\n\ntibble [1,088 × 7] (S3: tbl_df/tbl/data.frame)\n $ Year      : num [1:1088] 1999 1999 1999 1999 1999 ...\n $ Sex       : Factor w/ 3 levels \"Both Sexes\",\"Female\",..: 2 3 2 3 2 3 2 3 2 3 ...\n $ Age       : Factor w/ 9 levels \"Less than 15 years\",..: 1 1 2 2 3 3 4 4 5 5 ...\n $ race_eth  : Factor w/ 4 levels \"Non-Hispanic White\",..: 2 2 2 2 2 2 2 2 2 2 ...\n $ Deaths    : num [1:1088] 11 11 26 78 126 302 305 631 177 551 ...\n $ Population: num [1:1088] 4604949 4748293 2799428 2761491 2752017 ...\n $ crude_dr  : num [1:1088] 0.2 0.2 0.9 2.8 4.6 12.2 10.4 24.4 8.3 30.4 ...\n\nsummary(df)\n\n      Year              Sex                      Age     \n Min.   :1999   Both Sexes:  0   Less than 15 years:136  \n 1st Qu.:2003   Female    :544   15-24 years       :136  \n Median :2007   Male      :544   25-34 years       :136  \n Mean   :2007                    35-44 years       :136  \n 3rd Qu.:2011                    45-54 years       :136  \n Max.   :2015                    55-64 years       :136  \n                                 (Other)           :272  \n                    race_eth       Deaths          Population      \n Non-Hispanic White     :272   Min.   :   0.00   Min.   :  146555  \n Non-Hispanic Black     :272   1st Qu.:  21.75   1st Qu.: 1161401  \n Hispanic               :272   Median : 102.50   Median : 2585722  \n Non-Hispanic Other Race:272   Mean   : 522.58   Mean   : 4699098  \n                               3rd Qu.: 388.25   3rd Qu.: 6651233  \n                               Max.   :6874.00   Max.   :19270575  \n                                                                   \n    crude_dr     \n Min.   : 0.000  \n 1st Qu.: 2.300  \n Median : 4.600  \n Mean   : 8.045  \n 3rd Qu.:11.300  \n Max.   :53.500  \n                 \n\n# Sweet summary stats but I'm more of a visual person...\n\n## Aggregate Death Count by Sex\ndf %>%\n  ggplot(aes(x = factor(Sex), y = Deaths, fill = factor(Sex))) + \n  geom_bar(stat = \"identity\") +\n  labs(title = \"Deaths by Sex\", x = \"Sex (Male or Female)\",\n       y = \"Aggregate Deaths (All Age Groups from 1999 - 2015)\", fill = \"Sex\") +\n  theme_dark()\n\n\n\n## Aggregate Death Count by Race/Ethnicity\ndf %>%\n  ggplot(aes(x = factor(race_eth), y = Deaths, fill = factor(race_eth))) + \n  geom_bar(stat = \"identity\") +\n  labs(title = \"Drug Poison Deaths by Race/Ethnicity\", x = \"Race/Ethnicity\",\n       y = \"Aggregate Deaths (All Races/Ethnicities from 1999 - 2015)\",\n       fill = \"Race/Ethnicity\") +\n  theme_dark()\n\n\n\ndf %>%\n  ggplot(aes(x = factor(race_eth), y = log(Deaths), fill = factor(race_eth))) + \n  geom_bar(stat = \"identity\") +\n  labs(title = \"Log Drug Poison Deaths by Race/Ethnicity in the US\", \n       x = \"Race/Ethnicity\",\n       y = \"Log Deaths (All Races/Ethnicities from 1999 - 2015)\",\n       fill = \"Race/Ethnicity\") +\n  theme_dark()\n\nWarning: Removed 7 rows containing missing values (`geom_bar()`).\n\n\n\n\n## Aggregate Death Count by Age Group\ndf %>%\n  ggplot(aes(x = factor(Age), y = Deaths, fill = factor(Age))) + \n  geom_bar(stat = \"identity\") +\n  labs(title = \"Deaths by Age\", x = \"Age Group\",\n       y = \"Aggregate Deaths (from 1999 - 2015)\", fill = \"Age\") +\n  theme_dark()\n\n\n\ndf %>%\n  filter(Age == \"25-34 years\" | Age == \"35-44 years\") %>%\n  ggplot(aes(x = factor(Age), y = Deaths, fill = factor(Age))) + \n  geom_bar(stat = \"identity\") +\n  labs(title = \"Deaths by Age\", x = \"Age Group\",\n       y = \"Aggregate Deaths (from 1999 - 2015)\", fill = \"Age\") +\n  theme_dark()\n\n\n\n## CDR Trends by Age Group\ndf %>%\n  ggplot(aes(x = Year, y = crude_dr, color = Age)) +\n  geom_smooth(se = FALSE) +\n  labs(title = \"Drug Poison Death Rate Trends by Age Group in the US\", \n       x = \"Year of Death\", \n       y = \"Crude Death Rate (per 100,000)\") +\n  theme_dark()\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\n\n\n### CDR Trends by Sex\ndf %>%\n  ggplot(aes(x = Year, y = crude_dr, color = Sex)) +\n  geom_smooth(se = FALSE) +\n  labs(title = \"Drug Poison Death Rate Trends by Sex in the US\", \n       x = \"Year of Death\", \n       y = \"Crude Death Rate (per 100,000)\") +\n  theme_dark()\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\n\n\ndf %>%\n  filter(Age == \"25-34 years\" | Age == \"35-44 years\") %>%\n  ggplot(aes(x = Year, y = crude_dr, color = Age)) +\n  geom_smooth(se = FALSE) +\n  labs(title = \"Drug Poison Death Rate Trends by Age Group in the US\", \n       x = \"Year of Death\", \n       y = \"Crude Death Rate (per 100,000)\") +\n  theme_dark()\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'"
  }
]